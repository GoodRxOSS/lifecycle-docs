(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3382],{1513:(e,n,a)=>{"use strict";a.d(n,{R:()=>o});var r=a(1668),t=a(4587),i=a.n(t),s=a(4232);let l={img:e=>(0,s.createElement)("object"==typeof e.src?i():"img",e)},o=e=>(0,r.R)({...l,...e})},1807:(e,n,a)=>{"use strict";a.d(n,{e:()=>c});var r=a(7876),t=a(181),i=a(7096);let s=(0,a(4232).createContext)({}),l=s.Provider;s.displayName="SSG";var o=a(1513);function c(e,n,a,r){let i=globalThis[t.VZ];return i.route=n,i.pageMap=a.pageMap,i.context[n]={Content:e,pageOpts:a,useTOC:r},d}function d({__nextra_pageMap:e=[],__nextra_dynamic_opts:n,...a}){let s=globalThis[t.VZ],{Layout:o,themeConfig:c}=s,{route:d,locale:D}=(0,i.r)(),h=s.context[d];if(!h)throw Error(`No content found for the "${d}" route. Please report it as a bug.`);let{pageOpts:p,useTOC:E,Content:u}=h;if(d.startsWith("/["))p.pageMap=e;else for(let{route:n,children:a}of e){let e=n.split("/").slice(D?2:1);(function e(n,[a,...r]){for(let t of n)if("children"in t&&a===t.name)return r.length?e(t.children,r):t})(p.pageMap,e).children=a}if(n){let{title:e,frontMatter:a}=n;p={...p,title:e,frontMatter:a}}return(0,r.jsx)(o,{themeConfig:c,pageOpts:p,pageProps:a,children:(0,r.jsx)(l,{value:a,children:(0,r.jsx)(m,{useTOC:E,children:(0,r.jsx)(u,{...a})})})})}function m({children:e,useTOC:n}){let{wrapper:a}=(0,o.R)();return(0,r.jsx)(D,{useTOC:n,wrapper:a,children:e})}function D({children:e,useTOC:n,wrapper:a,...t}){let i=n(t);return a?(0,r.jsx)(a,{toc:i,children:e}):e}},4104:(e,n,a)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/features/native-helm-deployment",function(){return a(8984)}])},8984:(e,n,a)=>{"use strict";a.r(n),a.d(n,{default:()=>D,useTOC:()=>m});var r=a(7876),t=a(1807),i=a(4674),s=a(1513),l=a(9941),o=a(9241),c=a(4232);function d({children:e,className:n,style:a,...t}){let i=(0,c.useId)().replaceAll(":","");return(0,r.jsx)("div",{className:(0,o.A)("nextra-steps _ms-4 _mb-12 _border-s _border-gray-200 _ps-6","dark:_border-neutral-800",n),style:{...a,"--counter-id":i},...t,children:e})}function m(e){return[{value:"Overview",id:"overview",depth:2},{value:"Quickstart",id:"quickstart",depth:2},{value:"Configuration",id:"configuration",depth:2},{value:"Enabling Native Helm",id:"enabling-native-helm",depth:3},{value:"Per Service Configuration",id:"per-service-configuration",depth:4},{value:"Global Configuration",id:"global-configuration",depth:4},{value:"Configuration Precedence",id:"configuration-precedence",depth:3},{value:"Global Configuration (Database)",id:"global-configuration-database",depth:3},{value:"helmDefaults Configuration",id:"helmdefaults-configuration",depth:4},{value:"Chart-specific Configuration",id:"chart-specific-configuration",depth:4},{value:"Usage Examples",id:"usage-examples",depth:2},{value:"Quick Experiment: Deploy Jenkins!",id:"quick-experiment-deploy-jenkins",depth:3},{value:"Basic Service Deployment",id:"basic-service-deployment",depth:3},{value:"PostgreSQL with Overrides",id:"postgresql-with-overrides",depth:3},{value:"Custom Environment Variables",id:"custom-environment-variables",depth:3},{value:"Default envMapping Configuration",id:"default-envmapping-configuration",depth:4},{value:"Array Format",id:"array-format",depth:4},{value:"Map Format",id:"map-format",depth:4},{value:"Complete Example with Multiple Services",id:"complete-example-with-multiple-services",depth:4},{value:"Templated Variables",id:"templated-variables",depth:2},{value:"Available Variables",id:"available-variables",depth:3},{value:"Usage in Values",id:"usage-in-values",depth:3},{value:"Image Mapping Examples",id:"image-mapping-examples",depth:4},{value:"Template Resolution Order",id:"template-resolution-order",depth:3},{value:"Example with Service Dependencies",id:"example-with-service-dependencies",depth:3},{value:"Deployment Process",id:"deployment-process",depth:2},{value:"Concurrent Deployment Handling",id:"concurrent-deployment-handling",depth:3},{value:"Monitoring Deployments",id:"monitoring-deployments",depth:2},{value:"Deploy Logs Access",id:"deploy-logs-access",depth:3},{value:"Log Contents",id:"log-contents",depth:3},{value:"Chart Types",id:"chart-types",depth:2},{value:"Troubleshooting",id:"troubleshooting",depth:2},{value:"Deployment Fails with “Another Operation in Progress”",id:"deployment-fails-with-another-operation-in-progress",depth:3},{value:"Environment Variables Not Working",id:"environment-variables-not-working",depth:3},{value:"Migration Example",id:"migration-example",depth:2},{value:"Before: GitHub-type Services",id:"before-github-type-services",depth:3},{value:"After: Helm-type Services with Native Deployment",id:"after-helm-type-services-with-native-deployment",depth:3},{value:"Key Migration Points",id:"key-migration-points",depth:3}]}a(9471);let D=(0,t.e)(function(e){let{toc:n=m(e)}=e,a={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components},{Code:t}=a;return t||function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Code",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(l.P,{type:"warning",children:(0,r.jsx)(a.p,{children:"This feature is still in alpha and might change with breaking changes."})}),"\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.strong,{children:"Native Helm"})," is an alternative deployment method that runs Helm deployments directly within Kubernetes jobs, eliminating the need for external CI/CD systems. This provides a more self-contained and portable deployment solution."]}),"\n",(0,r.jsx)(l.P,{type:"info",children:(0,r.jsx)(a.p,{children:"Native Helm deployment is an opt-in feature that can be enabled globally or\nper-service."})}),"\n",(0,r.jsx)(a.h2,{id:n[0].id,children:n[0].value}),"\n",(0,r.jsx)(a.p,{children:"When enabled, Native Helm:"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsx)(a.li,{children:"Creates Kubernetes jobs to execute Helm deployments"}),"\n",(0,r.jsx)(a.li,{children:"Runs in ephemeral namespaces with proper RBAC"}),"\n",(0,r.jsx)(a.li,{children:"Provides real-time deployment logs via WebSocket"}),"\n",(0,r.jsx)(a.li,{children:"Handles concurrent deployments automatically"}),"\n",(0,r.jsx)(a.li,{children:"Supports all standard Helm chart types"}),"\n"]}),"\n",(0,r.jsx)(a.h2,{id:n[1].id,children:n[1].value}),"\n",(0,r.jsx)(a.p,{children:"Want to try native Helm deployment? Here’s the fastest way to get started:"}),"\n",(0,r.jsx)(t,{codeblock:{value:'services:\n  - name: my-api\n    defaultUUID: "dev-0"\n    helm:\n      deploymentMethod: "native" # That\'s it!\n      chart:\n        name: "local"\n        valueFiles:\n          - "./helm/values.yaml"',lang:"yaml",meta:'filename="lifecycle.yaml" {5}',code:'services:\n  - name: my-api\n    defaultUUID: "dev-0"\n    helm:\n      deploymentMethod: "native" # That\'s it!\n      chart:\n        name: "local"\n        valueFiles:\n          - "./helm/values.yaml"',tokens:[["services","#7EE787"],[":","#C9D1D9"],"\n  ",["-","#C9D1D9"]," ",["name","#7EE787"],[":","#C9D1D9"]," ",["my-api","#A5D6FF"],"\n    ",["defaultUUID","#7EE787"],[":","#C9D1D9"]," ",['"dev-0"',"#A5D6FF"],"\n    ",["helm","#7EE787"],[":","#C9D1D9"],"\n      ",["deploymentMethod","#7EE787"],[":","#C9D1D9"]," ",['"native"',"#A5D6FF"]," ",["# That's it!","#8B949E"],"\n      ",["chart","#7EE787"],[":","#C9D1D9"],"\n        ",["name","#7EE787"],[":","#C9D1D9"]," ",['"local"',"#A5D6FF"],"\n        ",["valueFiles","#7EE787"],[":","#C9D1D9"],"\n          ",["-","#C9D1D9"]," ",['"./helm/values.yaml"',"#A5D6FF"]],annotations:[],themeName:"github-dark",style:{color:"#c9d1d9",background:"#0d1117",colorScheme:"dark"}}}),"\n",(0,r.jsx)(a.p,{children:"This configuration:"}),"\n",(0,r.jsxs)(a.ol,{children:["\n",(0,r.jsxs)(a.li,{children:["Enables native Helm for the ",(0,r.jsx)(a.code,{children:"my-api"})," service"]}),"\n",(0,r.jsx)(a.li,{children:"Uses a local Helm chart from your repository"}),"\n",(0,r.jsxs)(a.li,{children:["Applies values from ",(0,r.jsx)(a.code,{children:"./helm/values.yaml"})]}),"\n",(0,r.jsx)(a.li,{children:"Runs deployment as a Kubernetes job"}),"\n"]}),"\n",(0,r.jsx)(l.P,{type:"tip",children:(0,r.jsxs)(a.p,{children:["To enable native Helm for all services at once, see ",(0,r.jsx)(a.a,{href:"#enabling-native-helm",children:"Global\nConfiguration"}),"."]})}),"\n",(0,r.jsx)(a.h2,{id:n[2].id,children:n[2].value}),"\n",(0,r.jsx)(a.h3,{id:n[3].id,children:n[3].value}),"\n",(0,r.jsx)(a.p,{children:"There are two ways to enable native Helm deployment:"}),"\n",(0,r.jsx)(a.h4,{id:n[4].id,children:n[4].value}),"\n",(0,r.jsx)(a.p,{children:"Enable native Helm for individual services:"}),"\n",(0,r.jsx)(t,{codeblock:{value:'services:\n  - name: my-service\n    helm:\n      deploymentMethod: "native" # Enable for this service only\n      chart:\n        name: my-chart',lang:"yaml",meta:'{4} filename="lifecycle.yaml"',code:'services:\n  - name: my-service\n    helm:\n      deploymentMethod: "native" # Enable for this service only\n      chart:\n        name: my-chart',tokens:[["services","#7EE787"],[":","#C9D1D9"],"\n  ",["-","#C9D1D9"]," ",["name","#7EE787"],[":","#C9D1D9"]," ",["my-service","#A5D6FF"],"\n    ",["helm","#7EE787"],[":","#C9D1D9"],"\n      ",["deploymentMethod","#7EE787"],[":","#C9D1D9"]," ",['"native"',"#A5D6FF"]," ",["# Enable for this service only","#8B949E"],"\n      ",["chart","#7EE787"],[":","#C9D1D9"],"\n        ",["name","#7EE787"],[":","#C9D1D9"]," ",["my-chart","#A5D6FF"]],annotations:[],themeName:"github-dark",style:{color:"#c9d1d9",background:"#0d1117",colorScheme:"dark"}}}),"\n",(0,r.jsx)(a.h4,{id:n[5].id,children:n[5].value}),"\n",(0,r.jsx)(a.p,{children:"Enable native Helm for all services:"}),"\n",(0,r.jsx)(t,{codeblock:{value:"helm:\n  nativeHelm:\n    enabled: true # Enable for all services",lang:"yaml",meta:'{3} filename="lifecycle.yaml"',code:"helm:\n  nativeHelm:\n    enabled: true # Enable for all services",tokens:[["helm","#7EE787"],[":","#C9D1D9"],"\n  ",["nativeHelm","#7EE787"],[":","#C9D1D9"],"\n    ",["enabled","#7EE787"],[":","#C9D1D9"]," ",["true","#79C0FF"]," ",["# Enable for all services","#8B949E"]],annotations:[],themeName:"github-dark",style:{color:"#c9d1d9",background:"#0d1117",colorScheme:"dark"}}}),"\n",(0,r.jsx)(a.h3,{id:n[6].id,children:n[6].value}),"\n",(0,r.jsx)(a.p,{children:"Lifecycle uses a hierarchical configuration system with three levels of precedence:"}),"\n",(0,r.jsxs)(a.ol,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"helmDefaults"})," - Base defaults for all deployments (database: ",(0,r.jsx)(a.code,{children:"global_config"})," table)"]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Chart-specific config"})," - Per-chart defaults (database: ",(0,r.jsx)(a.code,{children:"global_config"})," table)"]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Service YAML config"})," - Service-specific overrides (highest priority)"]}),"\n"]}),"\n",(0,r.jsx)(l.P,{children:(0,r.jsx)(a.p,{children:"Service-level configuration always takes precedence over global defaults."})}),"\n",(0,r.jsx)(a.h3,{id:n[7].id,children:n[7].value}),"\n",(0,r.jsxs)(a.p,{children:["Global configurations are stored in the ",(0,r.jsx)(a.code,{children:"global_config"})," table in the database. Each configuration is stored as a row with:"]}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"key"}),": The configuration name (e.g., ‘helmDefaults’, ‘postgresql’, ‘redis’)"]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"config"}),": JSON object containing the configuration"]}),"\n"]}),"\n",(0,r.jsx)(a.h4,{id:n[8].id,children:n[8].value}),"\n",(0,r.jsxs)(a.p,{children:["Stored in database with key ",(0,r.jsx)(a.code,{children:"helmDefaults"}),":"]}),"\n",(0,r.jsx)(t,{codeblock:{value:'{\n  "nativeHelm": {\n    "enabled": true,\n    "defaultArgs": "--wait --timeout 30m",\n    "defaultHelmVersion": "3.12.0"\n  }\n}',lang:"json",meta:"",code:'{\n  "nativeHelm": {\n    "enabled": true,\n    "defaultArgs": "--wait --timeout 30m",\n    "defaultHelmVersion": "3.12.0"\n  }\n}',tokens:[["{","#C9D1D9"],"\n  ",['"nativeHelm"',"#7EE787"],[": {","#C9D1D9"],"\n    ",['"enabled"',"#7EE787"],[":","#C9D1D9"]," ",["true","#79C0FF"],[",","#C9D1D9"],"\n    ",['"defaultArgs"',"#7EE787"],[":","#C9D1D9"]," ",['"--wait --timeout 30m"',"#A5D6FF"],[",","#C9D1D9"],"\n    ",['"defaultHelmVersion"',"#7EE787"],[":","#C9D1D9"]," ",['"3.12.0"',"#A5D6FF"],"\n  ",["}","#C9D1D9"],"\n",["}","#C9D1D9"]],annotations:[],themeName:"github-dark",style:{color:"#c9d1d9",background:"#0d1117",colorScheme:"dark"}}}),"\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.strong,{children:"Field Descriptions"}),":"]}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"enabled"}),": When ",(0,r.jsx)(a.code,{children:"true"}),", enables native Helm deployment for all services unless they explicitly set ",(0,r.jsx)(a.code,{children:'deploymentMethod: "ci"'})]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"defaultArgs"}),": Arguments automatically appended to every Helm command (appears before service-specific args)"]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"defaultHelmVersion"}),": The Helm version to use when not specified at the service or chart level"]}),"\n"]}),"\n",(0,r.jsx)(a.h4,{id:n[9].id,children:n[9].value}),"\n",(0,r.jsxs)(a.p,{children:["Example: PostgreSQL configuration stored with key ",(0,r.jsx)(a.code,{children:"postgresql"}),":"]}),"\n",(0,r.jsx)(t,{codeblock:{value:'{\n  "version": "3.13.0",\n  "args": "--force --timeout 60m0s --wait",\n  "chart": {\n    "name": "postgresql",\n    "repoUrl": "https://charts.bitnami.com/bitnami",\n    "version": "12.9.0",\n    "values": ["auth.username=postgres_user", "auth.database=postgres_db"]\n  }\n}',lang:"json",meta:"",code:'{\n  "version": "3.13.0",\n  "args": "--force --timeout 60m0s --wait",\n  "chart": {\n    "name": "postgresql",\n    "repoUrl": "https://charts.bitnami.com/bitnami",\n    "version": "12.9.0",\n    "values": ["auth.username=postgres_user", "auth.database=postgres_db"]\n  }\n}',tokens:[["{","#C9D1D9"],"\n  ",['"version"',"#7EE787"],[":","#C9D1D9"]," ",['"3.13.0"',"#A5D6FF"],[",","#C9D1D9"],"\n  ",['"args"',"#7EE787"],[":","#C9D1D9"]," ",['"--force --timeout 60m0s --wait"',"#A5D6FF"],[",","#C9D1D9"],"\n  ",['"chart"',"#7EE787"],[": {","#C9D1D9"],"\n    ",['"name"',"#7EE787"],[":","#C9D1D9"]," ",['"postgresql"',"#A5D6FF"],[",","#C9D1D9"],"\n    ",['"repoUrl"',"#7EE787"],[":","#C9D1D9"]," ",['"https://charts.bitnami.com/bitnami"',"#A5D6FF"],[",","#C9D1D9"],"\n    ",['"version"',"#7EE787"],[":","#C9D1D9"]," ",['"12.9.0"',"#A5D6FF"],[",","#C9D1D9"],"\n    ",['"values"',"#7EE787"],[": [","#C9D1D9"],['"auth.username=postgres_user"',"#A5D6FF"],[",","#C9D1D9"]," ",['"auth.database=postgres_db"',"#A5D6FF"],["]","#C9D1D9"],"\n  ",["}","#C9D1D9"],"\n",["}","#C9D1D9"]],annotations:[],themeName:"github-dark",style:{color:"#c9d1d9",background:"#0d1117",colorScheme:"dark"}}}),"\n",(0,r.jsx)(l.P,{type:"info",children:(0,r.jsx)(a.p,{children:"These global configurations are managed by administrators and stored in the\ndatabase. They provide consistent defaults across all environments and can be\noverridden at the service level."})}),"\n",(0,r.jsx)(a.h2,{id:n[10].id,children:n[10].value}),"\n",(0,r.jsx)(a.h3,{id:n[11].id,children:n[11].value}),"\n",(0,r.jsx)(a.p,{children:"Want to see native Helm in action? Let’s deploy everyone’s favorite CI/CD tool - Jenkins! This example shows how easy it is to deploy popular applications using native Helm."}),"\n",(0,r.jsx)(t,{codeblock:{value:'environment:\n  defaultServices:\n    - name: "my-app"\n    - name: "jenkins" # Add Jenkins to your default services\n\nservices:\n  - name: "jenkins"\n    helm:\n      deploymentMethod: "native"\n      repository: "myorg/apps"\n      branchName: "main"\n      chart:\n        name: "jenkins"\n        repoUrl: "https://charts.bitnami.com/bitnami"\n        version: "13.6.8"\n        values:\n          - "service.type=ClusterIP"\n          - "ingress.enabled=true"\n          - "ingress.hostname={{jenkins_publicUrl}}"\n          - "ingress.ingressClassName=nginx"',lang:"yaml",meta:'filename="lifecycle.yaml"',code:'environment:\n  defaultServices:\n    - name: "my-app"\n    - name: "jenkins" # Add Jenkins to your default services\n\nservices:\n  - name: "jenkins"\n    helm:\n      deploymentMethod: "native"\n      repository: "myorg/apps"\n      branchName: "main"\n      chart:\n        name: "jenkins"\n        repoUrl: "https://charts.bitnami.com/bitnami"\n        version: "13.6.8"\n        values:\n          - "service.type=ClusterIP"\n          - "ingress.enabled=true"\n          - "ingress.hostname={{jenkins_publicUrl}}"\n          - "ingress.ingressClassName=nginx"',tokens:[["environment","#7EE787"],[":","#C9D1D9"],"\n  ",["defaultServices","#7EE787"],[":","#C9D1D9"],"\n    ",["-","#C9D1D9"]," ",["name","#7EE787"],[":","#C9D1D9"]," ",['"my-app"',"#A5D6FF"],"\n    ",["-","#C9D1D9"]," ",["name","#7EE787"],[":","#C9D1D9"]," ",['"jenkins"',"#A5D6FF"]," ",["# Add Jenkins to your default services","#8B949E"],"\n\n",["services","#7EE787"],[":","#C9D1D9"],"\n  ",["-","#C9D1D9"]," ",["name","#7EE787"],[":","#C9D1D9"]," ",['"jenkins"',"#A5D6FF"],"\n    ",["helm","#7EE787"],[":","#C9D1D9"],"\n      ",["deploymentMethod","#7EE787"],[":","#C9D1D9"]," ",['"native"',"#A5D6FF"],"\n      ",["repository","#7EE787"],[":","#C9D1D9"]," ",['"myorg/apps"',"#A5D6FF"],"\n      ",["branchName","#7EE787"],[":","#C9D1D9"]," ",['"main"',"#A5D6FF"],"\n      ",["chart","#7EE787"],[":","#C9D1D9"],"\n        ",["name","#7EE787"],[":","#C9D1D9"]," ",['"jenkins"',"#A5D6FF"],"\n        ",["repoUrl","#7EE787"],[":","#C9D1D9"]," ",['"https://charts.bitnami.com/bitnami"',"#A5D6FF"],"\n        ",["version","#7EE787"],[":","#C9D1D9"]," ",['"13.6.8"',"#A5D6FF"],"\n        ",["values","#7EE787"],[":","#C9D1D9"],"\n          ",["-","#C9D1D9"]," ",['"service.type=ClusterIP"',"#A5D6FF"],"\n          ",["-","#C9D1D9"]," ",['"ingress.enabled=true"',"#A5D6FF"],"\n          ",["-","#C9D1D9"]," ",['"ingress.hostname={{jenkins_publicUrl}}"',"#A5D6FF"],"\n          ",["-","#C9D1D9"]," ",['"ingress.ingressClassName=nginx"',"#A5D6FF"]],annotations:[],themeName:"github-dark",style:{color:"#c9d1d9",background:"#0d1117",colorScheme:"dark"}}}),"\n",(0,r.jsx)(l.P,{type:"info",children:(0,r.jsx)(a.p,{children:"\uD83C\uDF89 That’s it! With just a few lines of configuration, you’ll have Jenkins\nrunning in your Kubernetes cluster."})}),"\n",(0,r.jsx)(a.p,{children:"To access your Jenkins instance:"}),"\n",(0,r.jsxs)(a.ol,{children:["\n",(0,r.jsx)(a.li,{children:"Check the deployment status in your PR comment"}),"\n",(0,r.jsxs)(a.li,{children:["Click the ",(0,r.jsx)(a.strong,{children:"Deploy Logs"})," link to monitor the deployment"]}),"\n",(0,r.jsx)(a.li,{children:"Once deployed, Jenkins will be available at the internal hostname"}),"\n"]}),"\n",(0,r.jsx)(l.P,{type:"tip",children:(0,r.jsxs)(a.p,{children:["For more Jenkins configuration options and values, check out the ",(0,r.jsx)(a.a,{href:"https://github.com/bitnami/charts/tree/main/bitnami/jenkins",children:"Bitnami\nJenkins chart\ndocumentation"}),".\nThis same pattern works for any Bitnami chart (PostgreSQL, Redis, MongoDB) or\nany other public Helm chart!"]})}),"\n",(0,r.jsx)(a.h3,{id:n[12].id,children:n[12].value}),"\n",(0,r.jsx)(t,{codeblock:{value:'services:\n  - name: web-api\n    helm:\n      deploymentMethod: "native"\n      chart:\n        name: web-app\n        version: "1.2.0"',lang:"yaml",meta:'filename="lifecycle.yaml"',code:'services:\n  - name: web-api\n    helm:\n      deploymentMethod: "native"\n      chart:\n        name: web-app\n        version: "1.2.0"',tokens:[["services","#7EE787"],[":","#C9D1D9"],"\n  ",["-","#C9D1D9"]," ",["name","#7EE787"],[":","#C9D1D9"]," ",["web-api","#A5D6FF"],"\n    ",["helm","#7EE787"],[":","#C9D1D9"],"\n      ",["deploymentMethod","#7EE787"],[":","#C9D1D9"]," ",['"native"',"#A5D6FF"],"\n      ",["chart","#7EE787"],[":","#C9D1D9"],"\n        ",["name","#7EE787"],[":","#C9D1D9"]," ",["web-app","#A5D6FF"],"\n        ",["version","#7EE787"],[":","#C9D1D9"]," ",['"1.2.0"',"#A5D6FF"]],annotations:[],themeName:"github-dark",style:{color:"#c9d1d9",background:"#0d1117",colorScheme:"dark"}}}),"\n",(0,r.jsx)(a.h3,{id:n[13].id,children:n[13].value}),"\n",(0,r.jsx)(t,{codeblock:{value:'services:\n  - name: database\n    helm:\n      deploymentMethod: "native"\n      version: "3.14.0" # Override Helm version\n      args: "--atomic" # Override deployment args\n      chart:\n        name: postgresql\n        values: # Additional values merged with defaults\n          - "persistence.size=20Gi"\n          - "replicaCount=2"',lang:"yaml",meta:'filename="lifecycle.yaml"',code:'services:\n  - name: database\n    helm:\n      deploymentMethod: "native"\n      version: "3.14.0" # Override Helm version\n      args: "--atomic" # Override deployment args\n      chart:\n        name: postgresql\n        values: # Additional values merged with defaults\n          - "persistence.size=20Gi"\n          - "replicaCount=2"',tokens:[["services","#7EE787"],[":","#C9D1D9"],"\n  ",["-","#C9D1D9"]," ",["name","#7EE787"],[":","#C9D1D9"]," ",["database","#A5D6FF"],"\n    ",["helm","#7EE787"],[":","#C9D1D9"],"\n      ",["deploymentMethod","#7EE787"],[":","#C9D1D9"]," ",['"native"',"#A5D6FF"],"\n      ",["version","#7EE787"],[":","#C9D1D9"]," ",['"3.14.0"',"#A5D6FF"]," ",["# Override Helm version","#8B949E"],"\n      ",["args","#7EE787"],[":","#C9D1D9"]," ",['"--atomic"',"#A5D6FF"]," ",["# Override deployment args","#8B949E"],"\n      ",["chart","#7EE787"],[":","#C9D1D9"],"\n        ",["name","#7EE787"],[":","#C9D1D9"]," ",["postgresql","#A5D6FF"],"\n        ",["values","#7EE787"],[":","#C9D1D9"]," ",["# Additional values merged with defaults","#8B949E"],"\n          ",["-","#C9D1D9"]," ",['"persistence.size=20Gi"',"#A5D6FF"],"\n          ",["-","#C9D1D9"]," ",['"replicaCount=2"',"#A5D6FF"]],annotations:[],themeName:"github-dark",style:{color:"#c9d1d9",background:"#0d1117",colorScheme:"dark"}}}),"\n",(0,r.jsx)(a.h3,{id:n[14].id,children:n[14].value}),"\n",(0,r.jsxs)(a.p,{children:["Lifecycle supports flexible environment variable formatting through the ",(0,r.jsx)(a.code,{children:"envMapping"})," configuration. This feature allows you to control how environment variables from your service configuration are passed to your Helm chart."]}),"\n",(0,r.jsx)(l.P,{type:"info",children:(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.strong,{children:"Why envMapping?"})," Different Helm charts expect environment variables in\ndifferent formats. Some expect an array of objects with ",(0,r.jsx)(a.code,{children:"name"})," and ",(0,r.jsx)(a.code,{children:"value"}),"\nfields (Kubernetes standard), while others expect a simple key-value map. The\n",(0,r.jsx)(a.code,{children:"envMapping"})," feature lets you adapt to your chart’s requirements."]})}),"\n",(0,r.jsx)(a.h4,{id:n[15].id,children:n[15].value}),"\n",(0,r.jsxs)(a.p,{children:["You can define default ",(0,r.jsx)(a.code,{children:"envMapping"})," configurations in the ",(0,r.jsx)(a.code,{children:"global_config"})," database table. These defaults apply to all services using that chart unless overridden at the service level."]}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.strong,{children:"Example: Setting defaults for your organization’s chart"})}),"\n",(0,r.jsx)(t,{codeblock:{value:'// In global_config table, key: "myorg-web-app"\n{\n  "chart": {\n    "name": "myorg-web-app",\n    "repoUrl": "https://charts.myorg.com"\n  },\n  "envMapping": {\n    "app": {\n      "format": "array",\n      "path": "deployment.containers[0].env"\n    }\n  }\n}',lang:"json",meta:"",code:'// In global_config table, key: "myorg-web-app"\n{\n  "chart": {\n    "name": "myorg-web-app",\n    "repoUrl": "https://charts.myorg.com"\n  },\n  "envMapping": {\n    "app": {\n      "format": "array",\n      "path": "deployment.containers[0].env"\n    }\n  }\n}',tokens:[['// In global_config table, key: "myorg-web-app"',"#8B949E"],"\n",["{","#C9D1D9"],"\n  ",['"chart"',"#7EE787"],[": {","#C9D1D9"],"\n    ",['"name"',"#7EE787"],[":","#C9D1D9"]," ",['"myorg-web-app"',"#A5D6FF"],[",","#C9D1D9"],"\n    ",['"repoUrl"',"#7EE787"],[":","#C9D1D9"]," ",['"https://charts.myorg.com"',"#A5D6FF"],"\n  ",["},","#C9D1D9"],"\n  ",['"envMapping"',"#7EE787"],[": {","#C9D1D9"],"\n    ",['"app"',"#7EE787"],[": {","#C9D1D9"],"\n      ",['"format"',"#7EE787"],[":","#C9D1D9"]," ",['"array"',"#A5D6FF"],[",","#C9D1D9"],"\n      ",['"path"',"#7EE787"],[":","#C9D1D9"]," ",['"deployment.containers[0].env"',"#A5D6FF"],"\n    ",["}","#C9D1D9"],"\n  ",["}","#C9D1D9"],"\n",["}","#C9D1D9"]],annotations:[],themeName:"github-dark",style:{color:"#c9d1d9",background:"#0d1117",colorScheme:"dark"}}}),"\n",(0,r.jsxs)(a.p,{children:["With this configuration, any service using the ",(0,r.jsx)(a.code,{children:"myorg-web-app"})," chart will automatically use array format for environment variables:"]}),"\n",(0,r.jsx)(t,{codeblock:{value:'services:\n  - name: api\n    helm:\n      deploymentMethod: "native"\n      chart:\n        name: "myorg-web-app" # Inherits envMapping from global_config\n      docker:\n        app:\n          env:\n            API_KEY: "secret"\n            # These will be formatted as array automatically',lang:"yaml",meta:'filename="lifecycle.yaml"',code:'services:\n  - name: api\n    helm:\n      deploymentMethod: "native"\n      chart:\n        name: "myorg-web-app" # Inherits envMapping from global_config\n      docker:\n        app:\n          env:\n            API_KEY: "secret"\n            # These will be formatted as array automatically',tokens:[["services","#7EE787"],[":","#C9D1D9"],"\n  ",["-","#C9D1D9"]," ",["name","#7EE787"],[":","#C9D1D9"]," ",["api","#A5D6FF"],"\n    ",["helm","#7EE787"],[":","#C9D1D9"],"\n      ",["deploymentMethod","#7EE787"],[":","#C9D1D9"]," ",['"native"',"#A5D6FF"],"\n      ",["chart","#7EE787"],[":","#C9D1D9"],"\n        ",["name","#7EE787"],[":","#C9D1D9"]," ",['"myorg-web-app"',"#A5D6FF"]," ",["# Inherits envMapping from global_config","#8B949E"],"\n      ",["docker","#7EE787"],[":","#C9D1D9"],"\n        ",["app","#7EE787"],[":","#C9D1D9"],"\n          ",["env","#7EE787"],[":","#C9D1D9"],"\n            ",["API_KEY","#7EE787"],[":","#C9D1D9"]," ",['"secret"',"#A5D6FF"],"\n            ",["# These will be formatted as array automatically","#8B949E"]],annotations:[],themeName:"github-dark",style:{color:"#c9d1d9",background:"#0d1117",colorScheme:"dark"}}}),"\n",(0,r.jsx)(l.P,{type:"tip",children:(0,r.jsxs)(a.p,{children:["Setting ",(0,r.jsx)(a.code,{children:"envMapping"})," in global_config is particularly useful when: - You have\na standard organizational chart used by many services - You want consistent\nenvironment variable handling across services - You’re migrating multiple\nservices and want to reduce configuration duplication"]})}),"\n",(0,r.jsx)(a.h4,{id:n[16].id,children:n[16].value}),"\n",(0,r.jsx)(a.p,{children:"Best for charts that expect Kubernetes-style env arrays."}),"\n",(0,r.jsx)(t,{codeblock:{value:'services:\n  - name: api\n    helm:\n      deploymentMethod: "native"\n      chart:\n        name: local\n      envMapping:\n        app:\n          format: "array"\n          path: "env"\n      docker:\n        app:\n          env:\n            DATABASE_URL: "postgres://localhost:5432/mydb"\n            API_KEY: "secret-key-123"\n            NODE_ENV: "production"',lang:"yaml",meta:'{7-9} filename="lifecycle.yaml"',code:'services:\n  - name: api\n    helm:\n      deploymentMethod: "native"\n      chart:\n        name: local\n      envMapping:\n        app:\n          format: "array"\n          path: "env"\n      docker:\n        app:\n          env:\n            DATABASE_URL: "postgres://localhost:5432/mydb"\n            API_KEY: "secret-key-123"\n            NODE_ENV: "production"',tokens:[["services","#7EE787"],[":","#C9D1D9"],"\n  ",["-","#C9D1D9"]," ",["name","#7EE787"],[":","#C9D1D9"]," ",["api","#A5D6FF"],"\n    ",["helm","#7EE787"],[":","#C9D1D9"],"\n      ",["deploymentMethod","#7EE787"],[":","#C9D1D9"]," ",['"native"',"#A5D6FF"],"\n      ",["chart","#7EE787"],[":","#C9D1D9"],"\n        ",["name","#7EE787"],[":","#C9D1D9"]," ",["local","#A5D6FF"],"\n      ",["envMapping","#7EE787"],[":","#C9D1D9"],"\n        ",["app","#7EE787"],[":","#C9D1D9"],"\n          ",["format","#7EE787"],[":","#C9D1D9"]," ",['"array"',"#A5D6FF"],"\n          ",["path","#7EE787"],[":","#C9D1D9"]," ",['"env"',"#A5D6FF"],"\n      ",["docker","#7EE787"],[":","#C9D1D9"],"\n        ",["app","#7EE787"],[":","#C9D1D9"],"\n          ",["env","#7EE787"],[":","#C9D1D9"],"\n            ",["DATABASE_URL","#7EE787"],[":","#C9D1D9"]," ",['"postgres://localhost:5432/mydb"',"#A5D6FF"],"\n            ",["API_KEY","#7EE787"],[":","#C9D1D9"]," ",['"secret-key-123"',"#A5D6FF"],"\n            ",["NODE_ENV","#7EE787"],[":","#C9D1D9"]," ",['"production"',"#A5D6FF"]],annotations:[],themeName:"github-dark",style:{color:"#c9d1d9",background:"#0d1117",colorScheme:"dark"}}}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.strong,{children:"This produces the following Helm values:"})}),"\n",(0,r.jsx)(t,{codeblock:{value:"--set env[0].name=DATABASE_URL\n--set env[0].value=postgres://localhost:5432/mydb\n--set env[1].name=API_KEY\n--set env[1].value=secret-key-123\n--set env[2].name=NODE_ENV\n--set env[2].value=production",lang:"shellscript",meta:"",code:"--set env[0].name=DATABASE_URL\n--set env[0].value=postgres://localhost:5432/mydb\n--set env[1].name=API_KEY\n--set env[1].value=secret-key-123\n--set env[2].name=NODE_ENV\n--set env[2].value=production",tokens:[["--set","#FFA657"]," ",["env[0].name=DATABASE_URL","#A5D6FF"],"\n",["--set","#FFA657"]," ",["env[0].value=postgres://localhost:5432/mydb","#A5D6FF"],"\n",["--set","#FFA657"]," ",["env[1].name=API_KEY","#A5D6FF"],"\n",["--set","#FFA657"]," ",["env[1].value=secret-key-123","#A5D6FF"],"\n",["--set","#FFA657"]," ",["env[2].name=NODE_ENV","#A5D6FF"],"\n",["--set","#FFA657"]," ",["env[2].value=production","#A5D6FF"]],annotations:[],themeName:"github-dark",style:{color:"#c9d1d9",background:"#0d1117",colorScheme:"dark"}}}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.strong,{children:"Your chart’s values.yaml would use it like:"})}),"\n",(0,r.jsx)(t,{codeblock:{value:"env:\n  - name: DATABASE_URL\n    value: postgres://localhost:5432/mydb\n  - name: API_KEY\n    value: secret-key-123\n  - name: NODE_ENV\n    value: production",lang:"yaml",meta:"",code:"env:\n  - name: DATABASE_URL\n    value: postgres://localhost:5432/mydb\n  - name: API_KEY\n    value: secret-key-123\n  - name: NODE_ENV\n    value: production",tokens:[["env","#7EE787"],[":","#C9D1D9"],"\n  ",["-","#C9D1D9"]," ",["name","#7EE787"],[":","#C9D1D9"]," ",["DATABASE_URL","#A5D6FF"],"\n    ",["value","#7EE787"],[":","#C9D1D9"]," ",["postgres://localhost:5432/mydb","#A5D6FF"],"\n  ",["-","#C9D1D9"]," ",["name","#7EE787"],[":","#C9D1D9"]," ",["API_KEY","#A5D6FF"],"\n    ",["value","#7EE787"],[":","#C9D1D9"]," ",["secret-key-123","#A5D6FF"],"\n  ",["-","#C9D1D9"]," ",["name","#7EE787"],[":","#C9D1D9"]," ",["NODE_ENV","#A5D6FF"],"\n    ",["value","#7EE787"],[":","#C9D1D9"]," ",["production","#A5D6FF"]],annotations:[],themeName:"github-dark",style:{color:"#c9d1d9",background:"#0d1117",colorScheme:"dark"}}}),"\n",(0,r.jsx)(a.h4,{id:n[17].id,children:n[17].value}),"\n",(0,r.jsx)(a.p,{children:"Best for charts that expect a simple key-value object."}),"\n",(0,r.jsx)(t,{codeblock:{value:'services:\n  - name: api\n    helm:\n      deploymentMethod: "native"\n      chart:\n        name: local\n      envMapping:\n        app:\n          format: "map"\n          path: "envVars"\n      docker:\n        app:\n          env:\n            DATABASE_URL: "postgres://localhost:5432/mydb"\n            API_KEY: "secret-key-123"\n            NODE_ENV: "production"',lang:"yaml",meta:'{7-9} filename="lifecycle.yaml"',code:'services:\n  - name: api\n    helm:\n      deploymentMethod: "native"\n      chart:\n        name: local\n      envMapping:\n        app:\n          format: "map"\n          path: "envVars"\n      docker:\n        app:\n          env:\n            DATABASE_URL: "postgres://localhost:5432/mydb"\n            API_KEY: "secret-key-123"\n            NODE_ENV: "production"',tokens:[["services","#7EE787"],[":","#C9D1D9"],"\n  ",["-","#C9D1D9"]," ",["name","#7EE787"],[":","#C9D1D9"]," ",["api","#A5D6FF"],"\n    ",["helm","#7EE787"],[":","#C9D1D9"],"\n      ",["deploymentMethod","#7EE787"],[":","#C9D1D9"]," ",['"native"',"#A5D6FF"],"\n      ",["chart","#7EE787"],[":","#C9D1D9"],"\n        ",["name","#7EE787"],[":","#C9D1D9"]," ",["local","#A5D6FF"],"\n      ",["envMapping","#7EE787"],[":","#C9D1D9"],"\n        ",["app","#7EE787"],[":","#C9D1D9"],"\n          ",["format","#7EE787"],[":","#C9D1D9"]," ",['"map"',"#A5D6FF"],"\n          ",["path","#7EE787"],[":","#C9D1D9"]," ",['"envVars"',"#A5D6FF"],"\n      ",["docker","#7EE787"],[":","#C9D1D9"],"\n        ",["app","#7EE787"],[":","#C9D1D9"],"\n          ",["env","#7EE787"],[":","#C9D1D9"],"\n            ",["DATABASE_URL","#7EE787"],[":","#C9D1D9"]," ",['"postgres://localhost:5432/mydb"',"#A5D6FF"],"\n            ",["API_KEY","#7EE787"],[":","#C9D1D9"]," ",['"secret-key-123"',"#A5D6FF"],"\n            ",["NODE_ENV","#7EE787"],[":","#C9D1D9"]," ",['"production"',"#A5D6FF"]],annotations:[],themeName:"github-dark",style:{color:"#c9d1d9",background:"#0d1117",colorScheme:"dark"}}}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.strong,{children:"This produces the following Helm values:"})}),"\n",(0,r.jsx)(t,{codeblock:{value:"--set envVars.DATABASE__URL=postgres://localhost:5432/mydb\n--set envVars.API__KEY=secret-key-123\n--set envVars.NODE__ENV=production",lang:"shellscript",meta:"",code:"--set envVars.DATABASE__URL=postgres://localhost:5432/mydb\n--set envVars.API__KEY=secret-key-123\n--set envVars.NODE__ENV=production",tokens:[["--set","#FFA657"]," ",["envVars.DATABASE__URL=postgres://localhost:5432/mydb","#A5D6FF"],"\n",["--set","#FFA657"]," ",["envVars.API__KEY=secret-key-123","#A5D6FF"],"\n",["--set","#FFA657"]," ",["envVars.NODE__ENV=production","#A5D6FF"]],annotations:[],themeName:"github-dark",style:{color:"#c9d1d9",background:"#0d1117",colorScheme:"dark"}}}),"\n",(0,r.jsx)(l.P,{type:"warning",children:(0,r.jsxs)(a.p,{children:["Note: Underscores in environment variable names are converted to double\nunderscores (",(0,r.jsx)(a.code,{children:"__"}),") in map format to avoid Helm parsing issues."]})}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.strong,{children:"Your chart’s values.yaml would use it like:"})}),"\n",(0,r.jsx)(t,{codeblock:{value:"envVars:\n  DATABASE__URL: postgres://localhost:5432/mydb\n  API__KEY: secret-key-123\n  NODE__ENV: production",lang:"yaml",meta:"",code:"envVars:\n  DATABASE__URL: postgres://localhost:5432/mydb\n  API__KEY: secret-key-123\n  NODE__ENV: production",tokens:[["envVars","#7EE787"],[":","#C9D1D9"],"\n  ",["DATABASE__URL","#7EE787"],[":","#C9D1D9"]," ",["postgres://localhost:5432/mydb","#A5D6FF"],"\n  ",["API__KEY","#7EE787"],[":","#C9D1D9"]," ",["secret-key-123","#A5D6FF"],"\n  ",["NODE__ENV","#7EE787"],[":","#C9D1D9"]," ",["production","#A5D6FF"]],annotations:[],themeName:"github-dark",style:{color:"#c9d1d9",background:"#0d1117",colorScheme:"dark"}}}),"\n",(0,r.jsx)(a.h4,{id:n[18].id,children:n[18].value}),"\n",(0,r.jsx)(t,{codeblock:{value:'services:\n  # Service using array format (common for standard Kubernetes deployments)\n  - name: frontend\n    helm:\n      deploymentMethod: "native"\n      repository: "myorg/apps"\n      branchName: "main"\n      envMapping:\n        app:\n          format: "array"\n          path: "deployment.env"\n      chart:\n        name: "./charts/web-app"\n      docker:\n        app:\n          dockerfilePath: "frontend/Dockerfile"\n          env:\n            REACT_APP_API_URL: "https://api.example.com"\n            REACT_APP_VERSION: "{{build.uuid}}"\n\n  # Service using map format (common for custom charts)\n  - name: backend\n    helm:\n      deploymentMethod: "native"\n      repository: "myorg/apps"\n      branchName: "main"\n      envMapping:\n        app:\n          format: "map"\n          path: "config.environment"\n      chart:\n        name: "./charts/api"\n      docker:\n        builder:\n          engine: "buildkit"\n        defaultTag: "main"\n        app:\n          dockerfilePath: "docker/backend.dockerfile"\n          ports:\n            - 3000\n          env:\n            NODE_ENV: "production"\n            SERVICE_NAME: "backend"\n\n  - name: "mysql-database"\n    helm:\n      deploymentMethod: "native"\n      repository: "myorg/api-services"\n      branchName: "main"\n      chart:\n        name: "mysql" # Using public Helm chart\n        version: "9.14.1"\n        repoUrl: "https://charts.bitnami.com/bitnami"\n        valueFiles:\n          - "deploy/helm/mysql-values.yaml"',lang:"yaml",meta:'filename="lifecycle.yaml"',code:'services:\n  # Service using array format (common for standard Kubernetes deployments)\n  - name: frontend\n    helm:\n      deploymentMethod: "native"\n      repository: "myorg/apps"\n      branchName: "main"\n      envMapping:\n        app:\n          format: "array"\n          path: "deployment.env"\n      chart:\n        name: "./charts/web-app"\n      docker:\n        app:\n          dockerfilePath: "frontend/Dockerfile"\n          env:\n            REACT_APP_API_URL: "https://api.example.com"\n            REACT_APP_VERSION: "{{build.uuid}}"\n\n  # Service using map format (common for custom charts)\n  - name: backend\n    helm:\n      deploymentMethod: "native"\n      repository: "myorg/apps"\n      branchName: "main"\n      envMapping:\n        app:\n          format: "map"\n          path: "config.environment"\n      chart:\n        name: "./charts/api"\n      docker:\n        builder:\n          engine: "buildkit"\n        defaultTag: "main"\n        app:\n          dockerfilePath: "docker/backend.dockerfile"\n          ports:\n            - 3000\n          env:\n            NODE_ENV: "production"\n            SERVICE_NAME: "backend"\n\n  - name: "mysql-database"\n    helm:\n      deploymentMethod: "native"\n      repository: "myorg/api-services"\n      branchName: "main"\n      chart:\n        name: "mysql" # Using public Helm chart\n        version: "9.14.1"\n        repoUrl: "https://charts.bitnami.com/bitnami"\n        valueFiles:\n          - "deploy/helm/mysql-values.yaml"',tokens:[["services","#7EE787"],[":","#C9D1D9"],"\n  ",["# Service using array format (common for standard Kubernetes deployments)","#8B949E"],"\n  ",["-","#C9D1D9"]," ",["name","#7EE787"],[":","#C9D1D9"]," ",["frontend","#A5D6FF"],"\n    ",["helm","#7EE787"],[":","#C9D1D9"],"\n      ",["deploymentMethod","#7EE787"],[":","#C9D1D9"]," ",['"native"',"#A5D6FF"],"\n      ",["repository","#7EE787"],[":","#C9D1D9"]," ",['"myorg/apps"',"#A5D6FF"],"\n      ",["branchName","#7EE787"],[":","#C9D1D9"]," ",['"main"',"#A5D6FF"],"\n      ",["envMapping","#7EE787"],[":","#C9D1D9"],"\n        ",["app","#7EE787"],[":","#C9D1D9"],"\n          ",["format","#7EE787"],[":","#C9D1D9"]," ",['"array"',"#A5D6FF"],"\n          ",["path","#7EE787"],[":","#C9D1D9"]," ",['"deployment.env"',"#A5D6FF"],"\n      ",["chart","#7EE787"],[":","#C9D1D9"],"\n        ",["name","#7EE787"],[":","#C9D1D9"]," ",['"./charts/web-app"',"#A5D6FF"],"\n      ",["docker","#7EE787"],[":","#C9D1D9"],"\n        ",["app","#7EE787"],[":","#C9D1D9"],"\n          ",["dockerfilePath","#7EE787"],[":","#C9D1D9"]," ",['"frontend/Dockerfile"',"#A5D6FF"],"\n          ",["env","#7EE787"],[":","#C9D1D9"],"\n            ",["REACT_APP_API_URL","#7EE787"],[":","#C9D1D9"]," ",['"https://api.example.com"',"#A5D6FF"],"\n            ",["REACT_APP_VERSION","#7EE787"],[":","#C9D1D9"]," ",['"{{build.uuid}}"',"#A5D6FF"],"\n\n  ",["# Service using map format (common for custom charts)","#8B949E"],"\n  ",["-","#C9D1D9"]," ",["name","#7EE787"],[":","#C9D1D9"]," ",["backend","#A5D6FF"],"\n    ",["helm","#7EE787"],[":","#C9D1D9"],"\n      ",["deploymentMethod","#7EE787"],[":","#C9D1D9"]," ",['"native"',"#A5D6FF"],"\n      ",["repository","#7EE787"],[":","#C9D1D9"]," ",['"myorg/apps"',"#A5D6FF"],"\n      ",["branchName","#7EE787"],[":","#C9D1D9"]," ",['"main"',"#A5D6FF"],"\n      ",["envMapping","#7EE787"],[":","#C9D1D9"],"\n        ",["app","#7EE787"],[":","#C9D1D9"],"\n          ",["format","#7EE787"],[":","#C9D1D9"]," ",['"map"',"#A5D6FF"],"\n          ",["path","#7EE787"],[":","#C9D1D9"]," ",['"config.environment"',"#A5D6FF"],"\n      ",["chart","#7EE787"],[":","#C9D1D9"],"\n        ",["name","#7EE787"],[":","#C9D1D9"]," ",['"./charts/api"',"#A5D6FF"],"\n      ",["docker","#7EE787"],[":","#C9D1D9"],"\n        ",["builder","#7EE787"],[":","#C9D1D9"],"\n          ",["engine","#7EE787"],[":","#C9D1D9"]," ",['"buildkit"',"#A5D6FF"],"\n        ",["defaultTag","#7EE787"],[":","#C9D1D9"]," ",['"main"',"#A5D6FF"],"\n        ",["app","#7EE787"],[":","#C9D1D9"],"\n          ",["dockerfilePath","#7EE787"],[":","#C9D1D9"]," ",['"docker/backend.dockerfile"',"#A5D6FF"],"\n          ",["ports","#7EE787"],[":","#C9D1D9"],"\n            ",["-","#C9D1D9"]," ",["3000","#79C0FF"],"\n          ",["env","#7EE787"],[":","#C9D1D9"],"\n            ",["NODE_ENV","#7EE787"],[":","#C9D1D9"]," ",['"production"',"#A5D6FF"],"\n            ",["SERVICE_NAME","#7EE787"],[":","#C9D1D9"]," ",['"backend"',"#A5D6FF"],"\n\n  ",["-","#C9D1D9"]," ",["name","#7EE787"],[":","#C9D1D9"]," ",['"mysql-database"',"#A5D6FF"],"\n    ",["helm","#7EE787"],[":","#C9D1D9"],"\n      ",["deploymentMethod","#7EE787"],[":","#C9D1D9"]," ",['"native"',"#A5D6FF"],"\n      ",["repository","#7EE787"],[":","#C9D1D9"]," ",['"myorg/api-services"',"#A5D6FF"],"\n      ",["branchName","#7EE787"],[":","#C9D1D9"]," ",['"main"',"#A5D6FF"],"\n      ",["chart","#7EE787"],[":","#C9D1D9"],"\n        ",["name","#7EE787"],[":","#C9D1D9"]," ",['"mysql"',"#A5D6FF"]," ",["# Using public Helm chart","#8B949E"],"\n        ",["version","#7EE787"],[":","#C9D1D9"]," ",['"9.14.1"',"#A5D6FF"],"\n        ",["repoUrl","#7EE787"],[":","#C9D1D9"]," ",['"https://charts.bitnami.com/bitnami"',"#A5D6FF"],"\n        ",["valueFiles","#7EE787"],[":","#C9D1D9"],"\n          ",["-","#C9D1D9"]," ",['"deploy/helm/mysql-values.yaml"',"#A5D6FF"]],annotations:[],themeName:"github-dark",style:{color:"#c9d1d9",background:"#0d1117",colorScheme:"dark"}}}),"\n",(0,r.jsx)(a.h2,{id:n[19].id,children:n[19].value}),"\n",(0,r.jsx)(a.p,{children:"Lifecycle supports template variables in Helm values that are resolved at deployment time. These variables allow you to reference dynamic values like build UUIDs, docker tags, and internal hostnames."}),"\n",(0,r.jsx)(a.h3,{id:n[20].id,children:n[20].value}),"\n",(0,r.jsxs)(a.p,{children:["Template variables use the format ",(0,r.jsx)(a.code,{children:"{{{variableName}}}"})," and are replaced with actual values during deployment:"]}),"\n",(0,r.jsxs)(a.table,{children:[(0,r.jsx)(a.thead,{children:(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.th,{children:"Variable"}),(0,r.jsx)(a.th,{children:"Description"}),(0,r.jsx)(a.th,{children:"Example Value"})]})}),(0,r.jsxs)(a.tbody,{children:[(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"{{{serviceName_dockerTag}}}"})}),(0,r.jsx)(a.td,{children:"Docker tag for a service"}),(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"main-abc123"})})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"{{{serviceName_dockerImage}}}"})}),(0,r.jsx)(a.td,{children:"Full docker image path"}),(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"registry.com/org/repo:main-abc123"})})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"{{{serviceName_internalHostname}}}"})}),(0,r.jsx)(a.td,{children:"Internal service hostname"}),(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"api-service.env-uuid.svc.cluster.local"})})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"{{{build.uuid}}}"})}),(0,r.jsx)(a.td,{children:"Build UUID"}),(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"env-12345"})})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"{{{build.namespace}}}"})}),(0,r.jsx)(a.td,{children:"Kubernetes namespace"}),(0,r.jsx)(a.td,{children:(0,r.jsx)(a.code,{children:"env-12345"})})]})]})]}),"\n",(0,r.jsx)(a.h3,{id:n[21].id,children:n[21].value}),"\n",(0,r.jsx)(t,{codeblock:{value:'services:\n  - name: web-api\n    helm:\n      deploymentMethod: "native"\n      chart:\n        name: "./charts/app"\n        values:\n          - "image.tag={{{web-api_dockerTag}}}"\n          - "backend.url=http://{{{backend-service_internalHostname}}}:8080"\n          - "env.BUILD_ID={{{build.uuid}}}"',lang:"yaml",meta:'filename="lifecycle.yaml"',code:'services:\n  - name: web-api\n    helm:\n      deploymentMethod: "native"\n      chart:\n        name: "./charts/app"\n        values:\n          - "image.tag={{{web-api_dockerTag}}}"\n          - "backend.url=http://{{{backend-service_internalHostname}}}:8080"\n          - "env.BUILD_ID={{{build.uuid}}}"',tokens:[["services","#7EE787"],[":","#C9D1D9"],"\n  ",["-","#C9D1D9"]," ",["name","#7EE787"],[":","#C9D1D9"]," ",["web-api","#A5D6FF"],"\n    ",["helm","#7EE787"],[":","#C9D1D9"],"\n      ",["deploymentMethod","#7EE787"],[":","#C9D1D9"]," ",['"native"',"#A5D6FF"],"\n      ",["chart","#7EE787"],[":","#C9D1D9"],"\n        ",["name","#7EE787"],[":","#C9D1D9"]," ",['"./charts/app"',"#A5D6FF"],"\n        ",["values","#7EE787"],[":","#C9D1D9"],"\n          ",["-","#C9D1D9"]," ",['"image.tag={{{web-api_dockerTag}}}"',"#A5D6FF"],"\n          ",["-","#C9D1D9"]," ",['"backend.url=http://{{{backend-service_internalHostname}}}:8080"',"#A5D6FF"],"\n          ",["-","#C9D1D9"]," ",['"env.BUILD_ID={{{build.uuid}}}"',"#A5D6FF"]],annotations:[],themeName:"github-dark",style:{color:"#c9d1d9",background:"#0d1117",colorScheme:"dark"}}}),"\n",(0,r.jsxs)(l.P,{type:"info",children:[(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.strong,{children:"Docker Image Mapping"}),": When using custom charts, you’ll need to map ",(0,r.jsx)(a.code,{children:"{{{serviceName_dockerImage}}}"})," or ",(0,r.jsx)(a.code,{children:"{{{serviceName_dockerTag}}}"})," to your chart’s expected value path. Common patterns include:"]}),(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"image.repository"})," and ",(0,r.jsx)(a.code,{children:"image.tag"})," (most common)"]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"deployment.image"})," (single image string)"]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"app.image"})," or ",(0,r.jsx)(a.code,{children:"application.image"})]}),"\n",(0,r.jsx)(a.li,{children:"Custom paths specific to your chart"}),"\n"]}),(0,r.jsxs)(a.p,{children:["Check your chart’s ",(0,r.jsx)(a.code,{children:"values.yaml"})," to determine the correct path."]})]}),"\n",(0,r.jsx)(a.h4,{id:n[22].id,children:n[22].value}),"\n",(0,r.jsx)(t,{codeblock:{value:'# Example 1: Separate repository and tag (most common)\nservices:\n  - name: web-api\n    helm:\n      chart:\n        name: "./charts/standard"\n        values:\n          - "image.repository=registry.com/org/web-api"    # Static repository\n          - "image.tag={{{web-api_dockerTag}}}"            # Dynamic tag only\n\n# Example 2: Combined image string\nservices:\n  - name: worker\n    helm:\n      chart:\n        name: "./charts/custom"\n        values:\n          - "deployment.image={{{worker_dockerImage}}}"    # Full image with tag\n\n# Example 3: Nested structure\nservices:\n  - name: backend\n    helm:\n      chart:\n        name: "./charts/microservice"\n        values:\n          - "app.container.image={{{backend_dockerImage}}}"  # Full image with tag',lang:"yaml",meta:'filename="lifecycle.yaml"',code:'# Example 1: Separate repository and tag (most common)\nservices:\n  - name: web-api\n    helm:\n      chart:\n        name: "./charts/standard"\n        values:\n          - "image.repository=registry.com/org/web-api"    # Static repository\n          - "image.tag={{{web-api_dockerTag}}}"            # Dynamic tag only\n\n# Example 2: Combined image string\nservices:\n  - name: worker\n    helm:\n      chart:\n        name: "./charts/custom"\n        values:\n          - "deployment.image={{{worker_dockerImage}}}"    # Full image with tag\n\n# Example 3: Nested structure\nservices:\n  - name: backend\n    helm:\n      chart:\n        name: "./charts/microservice"\n        values:\n          - "app.container.image={{{backend_dockerImage}}}"  # Full image with tag',tokens:[["# Example 1: Separate repository and tag (most common)","#8B949E"],"\n",["services","#7EE787"],[":","#C9D1D9"],"\n  ",["-","#C9D1D9"]," ",["name","#7EE787"],[":","#C9D1D9"]," ",["web-api","#A5D6FF"],"\n    ",["helm","#7EE787"],[":","#C9D1D9"],"\n      ",["chart","#7EE787"],[":","#C9D1D9"],"\n        ",["name","#7EE787"],[":","#C9D1D9"]," ",['"./charts/standard"',"#A5D6FF"],"\n        ",["values","#7EE787"],[":","#C9D1D9"],"\n          ",["-","#C9D1D9"]," ",['"image.repository=registry.com/org/web-api"',"#A5D6FF"],"    ",["# Static repository","#8B949E"],"\n          ",["-","#C9D1D9"]," ",['"image.tag={{{web-api_dockerTag}}}"',"#A5D6FF"],"            ",["# Dynamic tag only","#8B949E"],"\n\n",["# Example 2: Combined image string","#8B949E"],"\n",["services","#7EE787"],[":","#C9D1D9"],"\n  ",["-","#C9D1D9"]," ",["name","#7EE787"],[":","#C9D1D9"]," ",["worker","#A5D6FF"],"\n    ",["helm","#7EE787"],[":","#C9D1D9"],"\n      ",["chart","#7EE787"],[":","#C9D1D9"],"\n        ",["name","#7EE787"],[":","#C9D1D9"]," ",['"./charts/custom"',"#A5D6FF"],"\n        ",["values","#7EE787"],[":","#C9D1D9"],"\n          ",["-","#C9D1D9"]," ",['"deployment.image={{{worker_dockerImage}}}"',"#A5D6FF"],"    ",["# Full image with tag","#8B949E"],"\n\n",["# Example 3: Nested structure","#8B949E"],"\n",["services","#7EE787"],[":","#C9D1D9"],"\n  ",["-","#C9D1D9"]," ",["name","#7EE787"],[":","#C9D1D9"]," ",["backend","#A5D6FF"],"\n    ",["helm","#7EE787"],[":","#C9D1D9"],"\n      ",["chart","#7EE787"],[":","#C9D1D9"],"\n        ",["name","#7EE787"],[":","#C9D1D9"]," ",['"./charts/microservice"',"#A5D6FF"],"\n        ",["values","#7EE787"],[":","#C9D1D9"],"\n          ",["-","#C9D1D9"]," ",['"app.container.image={{{backend_dockerImage}}}"',"#A5D6FF"],"  ",["# Full image with tag","#8B949E"]],annotations:[],themeName:"github-dark",style:{color:"#c9d1d9",background:"#0d1117",colorScheme:"dark"}}}),"\n",(0,r.jsx)(l.P,{type:"warning",children:(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.strong,{children:"Important"}),": Always use triple braces ",(0,r.jsx)(a.code,{children:"{{{variable}}}"})," instead of double braces ",(0,r.jsx)(a.code,{children:"{{variable}}"})," for Lifecycle template variables. This prevents Helm from trying to process them as Helm template functions and ensures they are passed through correctly for Lifecycle to resolve."]})}),"\n",(0,r.jsx)(a.h3,{id:n[23].id,children:n[23].value}),"\n",(0,r.jsxs)(a.ol,{children:["\n",(0,r.jsxs)(a.li,{children:["Lifecycle resolves ",(0,r.jsx)(a.code,{children:"{{{variables}}}"})," before passing values to Helm"]}),"\n",(0,r.jsxs)(a.li,{children:["The resolved values are then passed to Helm using ",(0,r.jsx)(a.code,{children:"--set"})," flags"]}),"\n",(0,r.jsx)(a.li,{children:"Helm processes its own template functions (if any) after receiving the resolved values"}),"\n"]}),"\n",(0,r.jsx)(a.h3,{id:n[24].id,children:n[24].value}),"\n",(0,r.jsx)(t,{codeblock:{value:'services:\n  - name: api-gateway\n    helm:\n      chart:\n        name: "./charts/gateway"\n        values:\n          - "config.authServiceUrl=http://{{{auth-service_internalHostname}}}:3000"\n          - "config.userServiceUrl=http://{{{user-service_internalHostname}}}:3000"\n          - "image.tag={{{api-gateway_dockerTag}}}"\n\n  - name: auth-service\n    helm:\n      chart:\n        name: "./charts/microservice"\n        values:\n          - "image.tag={{{auth-service_dockerTag}}}"\n          - "database.host={{{postgres-db_internalHostname}}}"',lang:"yaml",meta:'filename="lifecycle.yaml"',code:'services:\n  - name: api-gateway\n    helm:\n      chart:\n        name: "./charts/gateway"\n        values:\n          - "config.authServiceUrl=http://{{{auth-service_internalHostname}}}:3000"\n          - "config.userServiceUrl=http://{{{user-service_internalHostname}}}:3000"\n          - "image.tag={{{api-gateway_dockerTag}}}"\n\n  - name: auth-service\n    helm:\n      chart:\n        name: "./charts/microservice"\n        values:\n          - "image.tag={{{auth-service_dockerTag}}}"\n          - "database.host={{{postgres-db_internalHostname}}}"',tokens:[["services","#7EE787"],[":","#C9D1D9"],"\n  ",["-","#C9D1D9"]," ",["name","#7EE787"],[":","#C9D1D9"]," ",["api-gateway","#A5D6FF"],"\n    ",["helm","#7EE787"],[":","#C9D1D9"],"\n      ",["chart","#7EE787"],[":","#C9D1D9"],"\n        ",["name","#7EE787"],[":","#C9D1D9"]," ",['"./charts/gateway"',"#A5D6FF"],"\n        ",["values","#7EE787"],[":","#C9D1D9"],"\n          ",["-","#C9D1D9"]," ",['"config.authServiceUrl=http://{{{auth-service_internalHostname}}}:3000"',"#A5D6FF"],"\n          ",["-","#C9D1D9"]," ",['"config.userServiceUrl=http://{{{user-service_internalHostname}}}:3000"',"#A5D6FF"],"\n          ",["-","#C9D1D9"]," ",['"image.tag={{{api-gateway_dockerTag}}}"',"#A5D6FF"],"\n\n  ",["-","#C9D1D9"]," ",["name","#7EE787"],[":","#C9D1D9"]," ",["auth-service","#A5D6FF"],"\n    ",["helm","#7EE787"],[":","#C9D1D9"],"\n      ",["chart","#7EE787"],[":","#C9D1D9"],"\n        ",["name","#7EE787"],[":","#C9D1D9"]," ",['"./charts/microservice"',"#A5D6FF"],"\n        ",["values","#7EE787"],[":","#C9D1D9"],"\n          ",["-","#C9D1D9"]," ",['"image.tag={{{auth-service_dockerTag}}}"',"#A5D6FF"],"\n          ",["-","#C9D1D9"]," ",['"database.host={{{postgres-db_internalHostname}}}"',"#A5D6FF"]],annotations:[],themeName:"github-dark",style:{color:"#c9d1d9",background:"#0d1117",colorScheme:"dark"}}}),"\n",(0,r.jsx)(a.h2,{id:n[25].id,children:n[25].value}),"\n",(0,r.jsx)(d,{children:(0,r.jsxs)(a.ol,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Job Creation"}),": A Kubernetes job is created in the ephemeral namespace 2.\n",(0,r.jsx)(a.strong,{children:"RBAC Setup"}),": Service account with namespace-scoped permissions is created"]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Git Clone"}),": Init container clones the repository 4. ",(0,r.jsx)(a.strong,{children:"Helm Deploy"}),":\nMain container executes the Helm deployment 5. ",(0,r.jsx)(a.strong,{children:"Monitoring"}),": Logs are\nstreamed in real-time via WebSocket"]}),"\n"]})}),"\n",(0,r.jsx)(a.h3,{id:n[26].id,children:n[26].value}),"\n",(0,r.jsx)(a.p,{children:"Native Helm automatically handles concurrent deployments by:"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsx)(a.li,{children:"Detecting existing deployment jobs"}),"\n",(0,r.jsx)(a.li,{children:"Force-deleting the old job"}),"\n",(0,r.jsx)(a.li,{children:"Starting the new deployment"}),"\n"]}),"\n",(0,r.jsx)(a.p,{children:"This ensures the newest deployment always takes precedence."}),"\n",(0,r.jsx)(a.h2,{id:n[27].id,children:n[27].value}),"\n",(0,r.jsx)(a.h3,{id:n[28].id,children:n[28].value}),"\n",(0,r.jsx)(a.p,{children:"For services using native Helm deployment, you can access deployment logs through the Lifecycle PR comment:"}),"\n",(0,r.jsxs)(a.ol,{children:["\n",(0,r.jsxs)(a.li,{children:["Add the ",(0,r.jsx)(a.code,{children:"lifecycle-status-comments!"})," label to your PR"]}),"\n",(0,r.jsxs)(a.li,{children:["In the status comment that appears, you’ll see a ",(0,r.jsx)(a.strong,{children:"Deploy Logs"})," link for each service using native Helm"]}),"\n",(0,r.jsx)(a.li,{children:"Click the link to view real-time deployment logs"}),"\n"]}),"\n",(0,r.jsx)(a.h3,{id:n[29].id,children:n[29].value}),"\n",(0,r.jsx)(a.p,{children:"The deployment logs show:"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:["Git repository cloning progress (",(0,r.jsx)(a.code,{children:"clone-repo"})," container)"]}),"\n",(0,r.jsxs)(a.li,{children:["Helm deployment execution (",(0,r.jsx)(a.code,{children:"helm-deploy"})," container)"]}),"\n",(0,r.jsx)(a.li,{children:"Real-time streaming of all deployment output"}),"\n",(0,r.jsx)(a.li,{children:"Success or failure status"}),"\n"]}),"\n",(0,r.jsx)(a.h2,{id:n[30].id,children:n[30].value}),"\n",(0,r.jsx)(a.p,{children:"Lifecycle automatically detects and handles three chart types:"}),"\n",(0,r.jsxs)(a.table,{children:[(0,r.jsx)(a.thead,{children:(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.th,{children:"Type"}),(0,r.jsx)(a.th,{children:"Detection"}),(0,r.jsx)(a.th,{children:"Features"})]})}),(0,r.jsxs)(a.tbody,{children:[(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:(0,r.jsx)(a.strong,{children:"ORG_CHART"})}),(0,r.jsxs)(a.td,{children:["Matches ",(0,r.jsx)(a.code,{children:"orgChartName"})," AND has ",(0,r.jsx)(a.code,{children:"helm.docker"})]}),(0,r.jsx)(a.td,{children:"Docker image injection, env var transformation"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:(0,r.jsx)(a.strong,{children:"LOCAL"})}),(0,r.jsx)(a.td,{children:"Name is “local” or starts with ”./” or ”../“"}),(0,r.jsxs)(a.td,{children:["Flexible ",(0,r.jsx)(a.code,{children:"envMapping"})," support"]})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:(0,r.jsx)(a.strong,{children:"PUBLIC"})}),(0,r.jsx)(a.td,{children:"Everything else"}),(0,r.jsx)(a.td,{children:"Standard labels and tolerations"})]})]})]}),"\n",(0,r.jsx)(l.P,{children:(0,r.jsxs)(a.p,{children:["The ",(0,r.jsx)(a.code,{children:"orgChartName"})," is configured in the database’s ",(0,r.jsx)(a.code,{children:"global_config"})," table with\nkey ",(0,r.jsx)(a.code,{children:"orgChart"}),". This allows organizations to define their standard internal\nHelm chart."]})}),"\n",(0,r.jsx)(a.h2,{id:n[31].id,children:n[31].value}),"\n",(0,r.jsx)(a.h3,{id:n[32].id,children:n[32].value}),"\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.strong,{children:"Symptom"}),": Helm reports an existing operation is blocking deployment"]}),"\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.strong,{children:"Solution"}),": Native Helm automatically handles this by killing existing jobs. If the issue persists:"]}),"\n",(0,r.jsx)(t,{codeblock:{value:"# Check for stuck jobs\nkubectl get jobs -n env-{uuid} -l service={serviceName}\n\n# Force delete if needed\nkubectl delete job {jobName} -n env-{uuid} --force --grace-period=0",lang:"shellscript",meta:"",code:"# Check for stuck jobs\nkubectl get jobs -n env-{uuid} -l service={serviceName}\n\n# Force delete if needed\nkubectl delete job {jobName} -n env-{uuid} --force --grace-period=0",tokens:[["# Check for stuck jobs","#8B949E"],"\n",["kubectl","#FFA657"]," ",["get jobs","#A5D6FF"]," ",["-n","#79C0FF"]," ",["env-{uuid}","#A5D6FF"]," ",["-l","#79C0FF"]," ",["service={serviceName}","#A5D6FF"],"\n\n",["# Force delete if needed","#8B949E"],"\n",["kubectl","#FFA657"]," ",["delete job {jobName}","#A5D6FF"]," ",["-n","#79C0FF"]," ",["env-{uuid}","#A5D6FF"]," ",["--force --grace-period=0","#79C0FF"]],annotations:[],themeName:"github-dark",style:{color:"#c9d1d9",background:"#0d1117",colorScheme:"dark"}}}),"\n",(0,r.jsx)(a.h3,{id:n[33].id,children:n[33].value}),"\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.strong,{children:"Symptom"}),": Environment variables not passed to the deployment"]}),"\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.strong,{children:"Common Issues"}),":"]}),"\n",(0,r.jsxs)(a.ol,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"envMapping"})," placed under ",(0,r.jsx)(a.code,{children:"chart"})," instead of directly under ",(0,r.jsx)(a.code,{children:"helm"})]}),"\n",(0,r.jsx)(a.li,{children:"Incorrect format specification (array vs map)"}),"\n",(0,r.jsx)(a.li,{children:"Missing path configuration"}),"\n"]}),"\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.strong,{children:"Correct Configuration"}),":"]}),"\n",(0,r.jsx)(t,{codeblock:{value:'helm:\n  deploymentMethod: "native"\n  chart:\n    name: local\n  envMapping: # Correct: directly under helm\n    app:\n      format: "array"\n      path: "env"',lang:"yaml",meta:"{4-7}",code:'helm:\n  deploymentMethod: "native"\n  chart:\n    name: local\n  envMapping: # Correct: directly under helm\n    app:\n      format: "array"\n      path: "env"',tokens:[["helm","#7EE787"],[":","#C9D1D9"],"\n  ",["deploymentMethod","#7EE787"],[":","#C9D1D9"]," ",['"native"',"#A5D6FF"],"\n  ",["chart","#7EE787"],[":","#C9D1D9"],"\n    ",["name","#7EE787"],[":","#C9D1D9"]," ",["local","#A5D6FF"],"\n  ",["envMapping","#7EE787"],[":","#C9D1D9"]," ",["# Correct: directly under helm","#8B949E"],"\n    ",["app","#7EE787"],[":","#C9D1D9"],"\n      ",["format","#7EE787"],[":","#C9D1D9"]," ",['"array"',"#A5D6FF"],"\n      ",["path","#7EE787"],[":","#C9D1D9"]," ",['"env"',"#A5D6FF"]],annotations:[],themeName:"github-dark",style:{color:"#c9d1d9",background:"#0d1117",colorScheme:"dark"}}}),"\n",(0,r.jsx)(a.h2,{id:n[34].id,children:n[34].value}),"\n",(0,r.jsx)(a.p,{children:"Here’s a complete example showing how to migrate from GitHub-type services to Helm-type services:"}),"\n",(0,r.jsx)(a.h3,{id:n[35].id,children:n[35].value}),"\n",(0,r.jsx)(t,{codeblock:{value:'services:\n  - name: "api-gateway"\n    github:\n      repository: "myorg/api-services"\n      branchName: "main"\n      docker:\n        builder:\n          engine: "buildkit"\n        defaultTag: "main"\n        app:\n          dockerfilePath: "docker/api.dockerfile"\n          env:\n            BACKEND_URL: "{{backend-service_internalHostname}}:3000"\n            LOG_LEVEL: "info"\n            ENV_NAME: "production"\n          ports:\n            - 8080\n      deployment:\n        public: true\n        resource:\n          cpu:\n            request: "100m"\n          memory:\n            request: "256Mi"\n        readiness:\n          tcpSocketPort: 8080\n        hostnames:\n          host: "example.com"\n          defaultInternalHostname: "api-gateway-prod"\n          defaultPublicUrl: "api.example.com"\n\n  - name: "backend-service"\n    github:\n      repository: "myorg/api-services"\n      branchName: "main"\n      docker:\n        builder:\n          engine: "buildkit"\n        defaultTag: "main"\n        app:\n          dockerfilePath: "docker/backend.dockerfile"\n          ports:\n            - 3000\n          env:\n            NODE_ENV: "production"\n            SERVICE_NAME: "backend"\n      deployment:\n        public: false\n        resource:\n          cpu:\n            request: "50m"\n          memory:\n            request: "128Mi"\n        readiness:\n          tcpSocketPort: 3000\n\n  - name: "mysql-database"\n    docker:\n      dockerImage: "mysql"\n      defaultTag: "8.0-debian"\n      ports:\n        - 3306\n      env:\n        MYSQL_ROOT_PASSWORD: "strongpassword123"\n        MYSQL_DATABASE: "app_database"\n        MYSQL_USER: "app_user"\n        MYSQL_PASSWORD: "apppassword456"\n      deployment:\n        public: false\n        resource:\n          cpu:\n            request: "100m"\n          memory:\n            request: "512Mi"\n        readiness:\n          tcpSocketPort: 3306\n        serviceDisks:\n          - name: "mysql-data"\n            mountPath: "/var/lib/mysql"\n            accessModes: "ReadWriteOnce"\n            storageSize: "10Gi"',lang:"yaml",meta:'filename="lifecycle.yaml"',code:'services:\n  - name: "api-gateway"\n    github:\n      repository: "myorg/api-services"\n      branchName: "main"\n      docker:\n        builder:\n          engine: "buildkit"\n        defaultTag: "main"\n        app:\n          dockerfilePath: "docker/api.dockerfile"\n          env:\n            BACKEND_URL: "{{backend-service_internalHostname}}:3000"\n            LOG_LEVEL: "info"\n            ENV_NAME: "production"\n          ports:\n            - 8080\n      deployment:\n        public: true\n        resource:\n          cpu:\n            request: "100m"\n          memory:\n            request: "256Mi"\n        readiness:\n          tcpSocketPort: 8080\n        hostnames:\n          host: "example.com"\n          defaultInternalHostname: "api-gateway-prod"\n          defaultPublicUrl: "api.example.com"\n\n  - name: "backend-service"\n    github:\n      repository: "myorg/api-services"\n      branchName: "main"\n      docker:\n        builder:\n          engine: "buildkit"\n        defaultTag: "main"\n        app:\n          dockerfilePath: "docker/backend.dockerfile"\n          ports:\n            - 3000\n          env:\n            NODE_ENV: "production"\n            SERVICE_NAME: "backend"\n      deployment:\n        public: false\n        resource:\n          cpu:\n            request: "50m"\n          memory:\n            request: "128Mi"\n        readiness:\n          tcpSocketPort: 3000\n\n  - name: "mysql-database"\n    docker:\n      dockerImage: "mysql"\n      defaultTag: "8.0-debian"\n      ports:\n        - 3306\n      env:\n        MYSQL_ROOT_PASSWORD: "strongpassword123"\n        MYSQL_DATABASE: "app_database"\n        MYSQL_USER: "app_user"\n        MYSQL_PASSWORD: "apppassword456"\n      deployment:\n        public: false\n        resource:\n          cpu:\n            request: "100m"\n          memory:\n            request: "512Mi"\n        readiness:\n          tcpSocketPort: 3306\n        serviceDisks:\n          - name: "mysql-data"\n            mountPath: "/var/lib/mysql"\n            accessModes: "ReadWriteOnce"\n            storageSize: "10Gi"',tokens:[["services","#7EE787"],[":","#C9D1D9"],"\n  ",["-","#C9D1D9"]," ",["name","#7EE787"],[":","#C9D1D9"]," ",['"api-gateway"',"#A5D6FF"],"\n    ",["github","#7EE787"],[":","#C9D1D9"],"\n      ",["repository","#7EE787"],[":","#C9D1D9"]," ",['"myorg/api-services"',"#A5D6FF"],"\n      ",["branchName","#7EE787"],[":","#C9D1D9"]," ",['"main"',"#A5D6FF"],"\n      ",["docker","#7EE787"],[":","#C9D1D9"],"\n        ",["builder","#7EE787"],[":","#C9D1D9"],"\n          ",["engine","#7EE787"],[":","#C9D1D9"]," ",['"buildkit"',"#A5D6FF"],"\n        ",["defaultTag","#7EE787"],[":","#C9D1D9"]," ",['"main"',"#A5D6FF"],"\n        ",["app","#7EE787"],[":","#C9D1D9"],"\n          ",["dockerfilePath","#7EE787"],[":","#C9D1D9"]," ",['"docker/api.dockerfile"',"#A5D6FF"],"\n          ",["env","#7EE787"],[":","#C9D1D9"],"\n            ",["BACKEND_URL","#7EE787"],[":","#C9D1D9"]," ",['"{{backend-service_internalHostname}}:3000"',"#A5D6FF"],"\n            ",["LOG_LEVEL","#7EE787"],[":","#C9D1D9"]," ",['"info"',"#A5D6FF"],"\n            ",["ENV_NAME","#7EE787"],[":","#C9D1D9"]," ",['"production"',"#A5D6FF"],"\n          ",["ports","#7EE787"],[":","#C9D1D9"],"\n            ",["-","#C9D1D9"]," ",["8080","#79C0FF"],"\n      ",["deployment","#7EE787"],[":","#C9D1D9"],"\n        ",["public","#7EE787"],[":","#C9D1D9"]," ",["true","#79C0FF"],"\n        ",["resource","#7EE787"],[":","#C9D1D9"],"\n          ",["cpu","#7EE787"],[":","#C9D1D9"],"\n            ",["request","#7EE787"],[":","#C9D1D9"]," ",['"100m"',"#A5D6FF"],"\n          ",["memory","#7EE787"],[":","#C9D1D9"],"\n            ",["request","#7EE787"],[":","#C9D1D9"]," ",['"256Mi"',"#A5D6FF"],"\n        ",["readiness","#7EE787"],[":","#C9D1D9"],"\n          ",["tcpSocketPort","#7EE787"],[":","#C9D1D9"]," ",["8080","#79C0FF"],"\n        ",["hostnames","#7EE787"],[":","#C9D1D9"],"\n          ",["host","#7EE787"],[":","#C9D1D9"]," ",['"example.com"',"#A5D6FF"],"\n          ",["defaultInternalHostname","#7EE787"],[":","#C9D1D9"]," ",['"api-gateway-prod"',"#A5D6FF"],"\n          ",["defaultPublicUrl","#7EE787"],[":","#C9D1D9"]," ",['"api.example.com"',"#A5D6FF"],"\n\n  ",["-","#C9D1D9"]," ",["name","#7EE787"],[":","#C9D1D9"]," ",['"backend-service"',"#A5D6FF"],"\n    ",["github","#7EE787"],[":","#C9D1D9"],"\n      ",["repository","#7EE787"],[":","#C9D1D9"]," ",['"myorg/api-services"',"#A5D6FF"],"\n      ",["branchName","#7EE787"],[":","#C9D1D9"]," ",['"main"',"#A5D6FF"],"\n      ",["docker","#7EE787"],[":","#C9D1D9"],"\n        ",["builder","#7EE787"],[":","#C9D1D9"],"\n          ",["engine","#7EE787"],[":","#C9D1D9"]," ",['"buildkit"',"#A5D6FF"],"\n        ",["defaultTag","#7EE787"],[":","#C9D1D9"]," ",['"main"',"#A5D6FF"],"\n        ",["app","#7EE787"],[":","#C9D1D9"],"\n          ",["dockerfilePath","#7EE787"],[":","#C9D1D9"]," ",['"docker/backend.dockerfile"',"#A5D6FF"],"\n          ",["ports","#7EE787"],[":","#C9D1D9"],"\n            ",["-","#C9D1D9"]," ",["3000","#79C0FF"],"\n          ",["env","#7EE787"],[":","#C9D1D9"],"\n            ",["NODE_ENV","#7EE787"],[":","#C9D1D9"]," ",['"production"',"#A5D6FF"],"\n            ",["SERVICE_NAME","#7EE787"],[":","#C9D1D9"]," ",['"backend"',"#A5D6FF"],"\n      ",["deployment","#7EE787"],[":","#C9D1D9"],"\n        ",["public","#7EE787"],[":","#C9D1D9"]," ",["false","#79C0FF"],"\n        ",["resource","#7EE787"],[":","#C9D1D9"],"\n          ",["cpu","#7EE787"],[":","#C9D1D9"],"\n            ",["request","#7EE787"],[":","#C9D1D9"]," ",['"50m"',"#A5D6FF"],"\n          ",["memory","#7EE787"],[":","#C9D1D9"],"\n            ",["request","#7EE787"],[":","#C9D1D9"]," ",['"128Mi"',"#A5D6FF"],"\n        ",["readiness","#7EE787"],[":","#C9D1D9"],"\n          ",["tcpSocketPort","#7EE787"],[":","#C9D1D9"]," ",["3000","#79C0FF"],"\n\n  ",["-","#C9D1D9"]," ",["name","#7EE787"],[":","#C9D1D9"]," ",['"mysql-database"',"#A5D6FF"],"\n    ",["docker","#7EE787"],[":","#C9D1D9"],"\n      ",["dockerImage","#7EE787"],[":","#C9D1D9"]," ",['"mysql"',"#A5D6FF"],"\n      ",["defaultTag","#7EE787"],[":","#C9D1D9"]," ",['"8.0-debian"',"#A5D6FF"],"\n      ",["ports","#7EE787"],[":","#C9D1D9"],"\n        ",["-","#C9D1D9"]," ",["3306","#79C0FF"],"\n      ",["env","#7EE787"],[":","#C9D1D9"],"\n        ",["MYSQL_ROOT_PASSWORD","#7EE787"],[":","#C9D1D9"]," ",['"strongpassword123"',"#A5D6FF"],"\n        ",["MYSQL_DATABASE","#7EE787"],[":","#C9D1D9"]," ",['"app_database"',"#A5D6FF"],"\n        ",["MYSQL_USER","#7EE787"],[":","#C9D1D9"]," ",['"app_user"',"#A5D6FF"],"\n        ",["MYSQL_PASSWORD","#7EE787"],[":","#C9D1D9"]," ",['"apppassword456"',"#A5D6FF"],"\n      ",["deployment","#7EE787"],[":","#C9D1D9"],"\n        ",["public","#7EE787"],[":","#C9D1D9"]," ",["false","#79C0FF"],"\n        ",["resource","#7EE787"],[":","#C9D1D9"],"\n          ",["cpu","#7EE787"],[":","#C9D1D9"],"\n            ",["request","#7EE787"],[":","#C9D1D9"]," ",['"100m"',"#A5D6FF"],"\n          ",["memory","#7EE787"],[":","#C9D1D9"],"\n            ",["request","#7EE787"],[":","#C9D1D9"]," ",['"512Mi"',"#A5D6FF"],"\n        ",["readiness","#7EE787"],[":","#C9D1D9"],"\n          ",["tcpSocketPort","#7EE787"],[":","#C9D1D9"]," ",["3306","#79C0FF"],"\n        ",["serviceDisks","#7EE787"],[":","#C9D1D9"],"\n          ",["-","#C9D1D9"]," ",["name","#7EE787"],[":","#C9D1D9"]," ",['"mysql-data"',"#A5D6FF"],"\n            ",["mountPath","#7EE787"],[":","#C9D1D9"]," ",['"/var/lib/mysql"',"#A5D6FF"],"\n            ",["accessModes","#7EE787"],[":","#C9D1D9"]," ",['"ReadWriteOnce"',"#A5D6FF"],"\n            ",["storageSize","#7EE787"],[":","#C9D1D9"]," ",['"10Gi"',"#A5D6FF"]],annotations:[],themeName:"github-dark",style:{color:"#c9d1d9",background:"#0d1117",colorScheme:"dark"}}}),"\n",(0,r.jsx)(a.h3,{id:n[36].id,children:n[36].value}),"\n",(0,r.jsx)(t,{codeblock:{value:'services:\n  - name: "api-gateway"\n    helm:\n      deploymentMethod: "native" # Enable native Helm\n      version: "3.14.0"\n      repository: "myorg/api-services"\n      branchName: "main"\n      args: "--wait --timeout 10m"\n      envMapping:\n        app:\n          format: "array"\n          path: "containers.api.env"\n      chart:\n        name: "./charts/microservices"\n        values:\n          - \'image.tag="{{{api-gateway_dockerTag}}}"\'\n          - "service.type=LoadBalancer"\n          - "ingress.enabled=true"\n        valueFiles:\n          - "deploy/helm/base-values.yaml"\n          - "deploy/helm/api-gateway-values.yaml"\n      docker:\n        builder:\n          engine: "buildkit"\n        defaultTag: "main"\n        app:\n          dockerfilePath: "docker/api.dockerfile"\n          env:\n            BACKEND_URL: "{{backend-service_internalHostname}}:3000"\n            LOG_LEVEL: "info"\n            ENV_NAME: "production"\n          ports:\n            - 8080\n\n  - name: "backend-service"\n    helm:\n      deploymentMethod: "native"\n      version: "3.14.0"\n      repository: "myorg/api-services"\n      branchName: "main"\n      envMapping:\n        app:\n          format: "map" # Using map format for this service\n          path: "env"\n      chart:\n        name: "./charts/microservices"\n        values:\n          - \'image.tag="{{{backend-service_dockerTag}}}"\'\n          - "replicaCount=2"\n        valueFiles:\n          - "deploy/helm/base-values.yaml"\n          - "deploy/helm/backend-values.yaml"\n      docker:\n        builder:\n          engine: "buildkit"\n        defaultTag: "main"\n        app:\n          dockerfilePath: "docker/backend.dockerfile"\n          ports:\n            - 3000\n          env:\n            NODE_ENV: "production"\n            SERVICE_NAME: "backend"\n\n  - name: "mysql-database"\n    helm:\n      deploymentMethod: "native"\n      repository: "myorg/api-services"\n      branchName: "main"\n      chart:\n        name: "mysql" # Using public Helm chart\n        version: "9.14.1"\n        repoUrl: "https://charts.bitnami.com/bitnami"\n        valueFiles:\n          - "deploy/helm/mysql-values.yaml"',lang:"yaml",meta:'filename="lifecycle.yaml"',code:'services:\n  - name: "api-gateway"\n    helm:\n      deploymentMethod: "native" # Enable native Helm\n      version: "3.14.0"\n      repository: "myorg/api-services"\n      branchName: "main"\n      args: "--wait --timeout 10m"\n      envMapping:\n        app:\n          format: "array"\n          path: "containers.api.env"\n      chart:\n        name: "./charts/microservices"\n        values:\n          - \'image.tag="{{{api-gateway_dockerTag}}}"\'\n          - "service.type=LoadBalancer"\n          - "ingress.enabled=true"\n        valueFiles:\n          - "deploy/helm/base-values.yaml"\n          - "deploy/helm/api-gateway-values.yaml"\n      docker:\n        builder:\n          engine: "buildkit"\n        defaultTag: "main"\n        app:\n          dockerfilePath: "docker/api.dockerfile"\n          env:\n            BACKEND_URL: "{{backend-service_internalHostname}}:3000"\n            LOG_LEVEL: "info"\n            ENV_NAME: "production"\n          ports:\n            - 8080\n\n  - name: "backend-service"\n    helm:\n      deploymentMethod: "native"\n      version: "3.14.0"\n      repository: "myorg/api-services"\n      branchName: "main"\n      envMapping:\n        app:\n          format: "map" # Using map format for this service\n          path: "env"\n      chart:\n        name: "./charts/microservices"\n        values:\n          - \'image.tag="{{{backend-service_dockerTag}}}"\'\n          - "replicaCount=2"\n        valueFiles:\n          - "deploy/helm/base-values.yaml"\n          - "deploy/helm/backend-values.yaml"\n      docker:\n        builder:\n          engine: "buildkit"\n        defaultTag: "main"\n        app:\n          dockerfilePath: "docker/backend.dockerfile"\n          ports:\n            - 3000\n          env:\n            NODE_ENV: "production"\n            SERVICE_NAME: "backend"\n\n  - name: "mysql-database"\n    helm:\n      deploymentMethod: "native"\n      repository: "myorg/api-services"\n      branchName: "main"\n      chart:\n        name: "mysql" # Using public Helm chart\n        version: "9.14.1"\n        repoUrl: "https://charts.bitnami.com/bitnami"\n        valueFiles:\n          - "deploy/helm/mysql-values.yaml"',tokens:[["services","#7EE787"],[":","#C9D1D9"],"\n  ",["-","#C9D1D9"]," ",["name","#7EE787"],[":","#C9D1D9"]," ",['"api-gateway"',"#A5D6FF"],"\n    ",["helm","#7EE787"],[":","#C9D1D9"],"\n      ",["deploymentMethod","#7EE787"],[":","#C9D1D9"]," ",['"native"',"#A5D6FF"]," ",["# Enable native Helm","#8B949E"],"\n      ",["version","#7EE787"],[":","#C9D1D9"]," ",['"3.14.0"',"#A5D6FF"],"\n      ",["repository","#7EE787"],[":","#C9D1D9"]," ",['"myorg/api-services"',"#A5D6FF"],"\n      ",["branchName","#7EE787"],[":","#C9D1D9"]," ",['"main"',"#A5D6FF"],"\n      ",["args","#7EE787"],[":","#C9D1D9"]," ",['"--wait --timeout 10m"',"#A5D6FF"],"\n      ",["envMapping","#7EE787"],[":","#C9D1D9"],"\n        ",["app","#7EE787"],[":","#C9D1D9"],"\n          ",["format","#7EE787"],[":","#C9D1D9"]," ",['"array"',"#A5D6FF"],"\n          ",["path","#7EE787"],[":","#C9D1D9"]," ",['"containers.api.env"',"#A5D6FF"],"\n      ",["chart","#7EE787"],[":","#C9D1D9"],"\n        ",["name","#7EE787"],[":","#C9D1D9"]," ",['"./charts/microservices"',"#A5D6FF"],"\n        ",["values","#7EE787"],[":","#C9D1D9"],"\n          ",["-","#C9D1D9"]," ",["'image.tag=\"{{{api-gateway_dockerTag}}}\"'","#A5D6FF"],"\n          ",["-","#C9D1D9"]," ",['"service.type=LoadBalancer"',"#A5D6FF"],"\n          ",["-","#C9D1D9"]," ",['"ingress.enabled=true"',"#A5D6FF"],"\n        ",["valueFiles","#7EE787"],[":","#C9D1D9"],"\n          ",["-","#C9D1D9"]," ",['"deploy/helm/base-values.yaml"',"#A5D6FF"],"\n          ",["-","#C9D1D9"]," ",['"deploy/helm/api-gateway-values.yaml"',"#A5D6FF"],"\n      ",["docker","#7EE787"],[":","#C9D1D9"],"\n        ",["builder","#7EE787"],[":","#C9D1D9"],"\n          ",["engine","#7EE787"],[":","#C9D1D9"]," ",['"buildkit"',"#A5D6FF"],"\n        ",["defaultTag","#7EE787"],[":","#C9D1D9"]," ",['"main"',"#A5D6FF"],"\n        ",["app","#7EE787"],[":","#C9D1D9"],"\n          ",["dockerfilePath","#7EE787"],[":","#C9D1D9"]," ",['"docker/api.dockerfile"',"#A5D6FF"],"\n          ",["env","#7EE787"],[":","#C9D1D9"],"\n            ",["BACKEND_URL","#7EE787"],[":","#C9D1D9"]," ",['"{{backend-service_internalHostname}}:3000"',"#A5D6FF"],"\n            ",["LOG_LEVEL","#7EE787"],[":","#C9D1D9"]," ",['"info"',"#A5D6FF"],"\n            ",["ENV_NAME","#7EE787"],[":","#C9D1D9"]," ",['"production"',"#A5D6FF"],"\n          ",["ports","#7EE787"],[":","#C9D1D9"],"\n            ",["-","#C9D1D9"]," ",["8080","#79C0FF"],"\n\n  ",["-","#C9D1D9"]," ",["name","#7EE787"],[":","#C9D1D9"]," ",['"backend-service"',"#A5D6FF"],"\n    ",["helm","#7EE787"],[":","#C9D1D9"],"\n      ",["deploymentMethod","#7EE787"],[":","#C9D1D9"]," ",['"native"',"#A5D6FF"],"\n      ",["version","#7EE787"],[":","#C9D1D9"]," ",['"3.14.0"',"#A5D6FF"],"\n      ",["repository","#7EE787"],[":","#C9D1D9"]," ",['"myorg/api-services"',"#A5D6FF"],"\n      ",["branchName","#7EE787"],[":","#C9D1D9"]," ",['"main"',"#A5D6FF"],"\n      ",["envMapping","#7EE787"],[":","#C9D1D9"],"\n        ",["app","#7EE787"],[":","#C9D1D9"],"\n          ",["format","#7EE787"],[":","#C9D1D9"]," ",['"map"',"#A5D6FF"]," ",["# Using map format for this service","#8B949E"],"\n          ",["path","#7EE787"],[":","#C9D1D9"]," ",['"env"',"#A5D6FF"],"\n      ",["chart","#7EE787"],[":","#C9D1D9"],"\n        ",["name","#7EE787"],[":","#C9D1D9"]," ",['"./charts/microservices"',"#A5D6FF"],"\n        ",["values","#7EE787"],[":","#C9D1D9"],"\n          ",["-","#C9D1D9"]," ",["'image.tag=\"{{{backend-service_dockerTag}}}\"'","#A5D6FF"],"\n          ",["-","#C9D1D9"]," ",['"replicaCount=2"',"#A5D6FF"],"\n        ",["valueFiles","#7EE787"],[":","#C9D1D9"],"\n          ",["-","#C9D1D9"]," ",['"deploy/helm/base-values.yaml"',"#A5D6FF"],"\n          ",["-","#C9D1D9"]," ",['"deploy/helm/backend-values.yaml"',"#A5D6FF"],"\n      ",["docker","#7EE787"],[":","#C9D1D9"],"\n        ",["builder","#7EE787"],[":","#C9D1D9"],"\n          ",["engine","#7EE787"],[":","#C9D1D9"]," ",['"buildkit"',"#A5D6FF"],"\n        ",["defaultTag","#7EE787"],[":","#C9D1D9"]," ",['"main"',"#A5D6FF"],"\n        ",["app","#7EE787"],[":","#C9D1D9"],"\n          ",["dockerfilePath","#7EE787"],[":","#C9D1D9"]," ",['"docker/backend.dockerfile"',"#A5D6FF"],"\n          ",["ports","#7EE787"],[":","#C9D1D9"],"\n            ",["-","#C9D1D9"]," ",["3000","#79C0FF"],"\n          ",["env","#7EE787"],[":","#C9D1D9"],"\n            ",["NODE_ENV","#7EE787"],[":","#C9D1D9"]," ",['"production"',"#A5D6FF"],"\n            ",["SERVICE_NAME","#7EE787"],[":","#C9D1D9"]," ",['"backend"',"#A5D6FF"],"\n\n  ",["-","#C9D1D9"]," ",["name","#7EE787"],[":","#C9D1D9"]," ",['"mysql-database"',"#A5D6FF"],"\n    ",["helm","#7EE787"],[":","#C9D1D9"],"\n      ",["deploymentMethod","#7EE787"],[":","#C9D1D9"]," ",['"native"',"#A5D6FF"],"\n      ",["repository","#7EE787"],[":","#C9D1D9"]," ",['"myorg/api-services"',"#A5D6FF"],"\n      ",["branchName","#7EE787"],[":","#C9D1D9"]," ",['"main"',"#A5D6FF"],"\n      ",["chart","#7EE787"],[":","#C9D1D9"],"\n        ",["name","#7EE787"],[":","#C9D1D9"]," ",['"mysql"',"#A5D6FF"]," ",["# Using public Helm chart","#8B949E"],"\n        ",["version","#7EE787"],[":","#C9D1D9"]," ",['"9.14.1"',"#A5D6FF"],"\n        ",["repoUrl","#7EE787"],[":","#C9D1D9"]," ",['"https://charts.bitnami.com/bitnami"',"#A5D6FF"],"\n        ",["valueFiles","#7EE787"],[":","#C9D1D9"],"\n          ",["-","#C9D1D9"]," ",['"deploy/helm/mysql-values.yaml"',"#A5D6FF"]],annotations:[],themeName:"github-dark",style:{color:"#c9d1d9",background:"#0d1117",colorScheme:"dark"}}}),"\n",(0,r.jsx)(a.h3,{id:n[37].id,children:n[37].value}),"\n",(0,r.jsxs)(a.ol,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Service Type Change"}),": Changed from ",(0,r.jsx)(a.code,{children:"github:"})," to ",(0,r.jsx)(a.code,{children:"helm:"})," configuration"]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Repository Location"}),": ",(0,r.jsx)(a.code,{children:"repository"})," and ",(0,r.jsx)(a.code,{children:"branchName"})," move from under ",(0,r.jsx)(a.code,{children:"github:"})," to directly under ",(0,r.jsx)(a.code,{children:"helm:"})]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Deployment Method"}),": Added ",(0,r.jsx)(a.code,{children:'deploymentMethod: "native"'})," to enable native Helm"]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Chart Configuration"}),": Added ",(0,r.jsx)(a.code,{children:"chart:"})," section with local or public charts"]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Environment Mapping"}),": Added ",(0,r.jsx)(a.code,{children:"envMapping:"})," to control how environment variables are passed"]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Helm Arguments"}),": Added ",(0,r.jsx)(a.code,{children:"args:"})," for Helm command customization"]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Docker Configuration"}),": Kept existing ",(0,r.jsx)(a.code,{children:"docker:"})," config for build process"]}),"\n"]}),"\n",(0,r.jsx)(l.P,{type:"warning",children:(0,r.jsxs)(a.p,{children:["Note that when converting from GitHub-type to Helm-type services, the\n",(0,r.jsx)(a.code,{children:"repository"})," and ",(0,r.jsx)(a.code,{children:"branchName"})," fields move from being nested under ",(0,r.jsx)(a.code,{children:"github:"})," to\nbeing directly under ",(0,r.jsx)(a.code,{children:"helm:"}),"."]})}),"\n",(0,r.jsx)(l.P,{type:"tip",children:(0,r.jsxs)(a.p,{children:["Many configuration options (like Helm version, args, and chart details) can be\ndefined in the ",(0,r.jsx)(a.code,{children:"global_config"})," database table, making the service YAML\ncleaner. Only override when needed."]})})]})},"/docs/features/native-helm-deployment",{filePath:"src/pages/docs/features/native-helm-deployment.mdx",timestamp:1750871691e3,pageMap:i.O,frontMatter:{title:"Native Helm Deployment",description:"Deploy services using Helm directly in Kubernetes without external CI/CD dependencies",tags:["helm","deployment","kubernetes","native"],date:"2025-01-29"},title:"Native Helm Deployment"},"undefined"==typeof RemoteContent?m:RemoteContent.useTOC)}},e=>{var n=n=>e(e.s=n);e.O(0,[4674,636,6593,8792],()=>n(4104)),_N_E=e.O()}]);